<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>arcuit</groupId>
  <artifactId>KpiWeb</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>KpiWeb Maven Webapp</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
      <tomcatContextXml></tomcatContextXml>
      <derby.version></derby.version>
      <struts2.version>2.5.14.1</struts2.version>
      <log4j2.version>2.10.0</log4j2.version>
      <derby.version></derby.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
      <!--
        Attention: Be sure nothing pulls in an old dependency with groupId
        "freemarker" (without the "org."), because then you will end up with
        two freemarker.jar-s and unpredictable behavior!
        -->
      <!--dependency>
          <groupId>org.freemarker</groupId>
          <artifactId>freemarker</artifactId>
          <version>2.3.28</version>
      </dependency-->
      <dependency>
          <groupId>javax.servlet</groupId>
          <artifactId>javax.servlet-api</artifactId>
          <version>3.0.1</version>
          <scope>provided</scope>
      </dependency>
      <!--dependency>
          <groupId>javax.servlet</groupId>
          <artifactId>servlet-api</artifactId>
          <version>2.5</version>
          <scope>provided</scope>
      </dependency-->
      <dependency>
          <groupId>org.apache.struts</groupId>
          <artifactId>struts2-core</artifactId>
          <version>${struts2.version}</version>
      </dependency>
      <dependency>
          <groupId>org.apache.struts</groupId>
          <artifactId>struts2-convention-plugin</artifactId>
          <version>${struts2.version}</version>
      </dependency>
      <dependency>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-core</artifactId>
          <version>${log4j2.version}</version>
      </dependency>
      <dependency>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-api</artifactId>
          <version>${log4j2.version}</version>
      </dependency>
      <dependency>
          <groupId>org.hibernate</groupId>
          <artifactId>hibernate-core</artifactId>
          <version>5.2.17.Final</version>
      </dependency>
      <dependency>
          <groupId>org.apache.derby</groupId>
          <artifactId>derby</artifactId>
          <version>10.14.2.0</version>
      </dependency>

  </dependencies>

  <build>
    <finalName>KpiWeb</finalName>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.7.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.20.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
          <groupId>org.apache.tomcat.maven</groupId>
          <artifactId>tomcat7-maven-plugin</artifactId>
          <!-- or if you want to use tomcat 6.x
          <artifactId>tomcat6-maven-plugin</artifactId>
          -->
          <version>2.2</version>
          <configuration>
              <!-- http port -->
              <port>9090</port>
              <!-- application path always starts with /-->
              <path>/</path>
              <!-- optional path to a context file -->
              <contextFile>${tomcatContextXml}</contextFile>
              <!-- optional system propoerties you want to add -->
              <systemProperties>
                  <appserver.base>${project.build.directory}/appserver-base</appserver.base>
                  <appserver.home>${project.build.directory}/appserver-home</appserver.home>
                  <derby.system.home>${project.basedir}/db</derby.system.home>
                  <java.io.tmpdir>${project.build.directory}</java.io.tmpdir>
              </systemProperties>
              <!-- if you want to use test dependencies rather than only runtime -->
              <useTestClasspath>false</useTestClasspath>
              <!-- optional if you want to add some extra directories into the classloader -->
              <additionalClasspathDirs>
                  <additionalClasspathDir></additionalClasspathDir>
              </additionalClasspathDirs>
          </configuration>
          <!-- For any extra dependencies needed when running embedded Tomcat (not WAR dependencies) add them below -->
          <dependencies>
              <dependency>
                  <groupId>org.apache.derby</groupId>
                  <artifactId>derby</artifactId>
                  <version>10.14.2.0</version>
              </dependency>
              <!--
              <dependency>
                  <groupId>javax.mail</groupId>
                  <artifactId>mail</artifactId>
                  <version>1.4</version>
              </dependency-->
          </dependencies>
      </plugin>
    </plugins>
  </build>
</project>
